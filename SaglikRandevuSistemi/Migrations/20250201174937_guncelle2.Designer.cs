// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SaglikRandevuSistemi.Models;

#nullable disable

namespace SaglikRandevuSistemi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250201174937_guncelle2")]
    partial class guncelle2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Cinsiyetler", b =>
                {
                    b.Property<int>("CinsiyetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CinsiyetID"));

                    b.Property<string>("CinsiyetAdi")
                        .HasColumnType("text");

                    b.HasKey("CinsiyetID");

                    b.ToTable("Cinsiyetlers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Doktorlar", b =>
                {
                    b.Property<int>("DrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DrID"));

                    b.Property<int?>("CinsiyetID")
                        .HasColumnType("integer");

                    b.Property<string>("DrAdi")
                        .HasColumnType("text");

                    b.Property<string>("DrEmail")
                        .HasColumnType("text");

                    b.Property<string>("DrSoyadi")
                        .HasColumnType("text");

                    b.Property<string>("DrTel")
                        .HasColumnType("text");

                    b.Property<string>("DrYas")
                        .HasColumnType("text");

                    b.Property<int?>("HastaneID")
                        .HasColumnType("integer");

                    b.Property<int?>("KlinikID")
                        .HasColumnType("integer");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("integer");

                    b.HasKey("DrID");

                    b.HasIndex("CinsiyetID");

                    b.HasIndex("HastaneID");

                    b.HasIndex("KlinikID");

                    b.HasIndex("KullaniciID")
                        .IsUnique();

                    b.ToTable("Doktorlars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.DrOptions", b =>
                {
                    b.Property<int>("OptionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OptionsID"));

                    b.Property<DateOnly>("Day")
                        .HasColumnType("date");

                    b.Property<int>("DrID")
                        .HasColumnType("integer");

                    b.Property<int>("HastaneID")
                        .HasColumnType("integer");

                    b.Property<int>("KlinikID")
                        .HasColumnType("integer");

                    b.Property<bool>("opt1")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt2")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt3")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt4")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt5")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt6")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt7")
                        .HasColumnType("boolean");

                    b.Property<bool>("opt8")
                        .HasColumnType("boolean");

                    b.HasKey("OptionsID");

                    b.ToTable("DrOptions");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastalar", b =>
                {
                    b.Property<int>("HastaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HastaID"));

                    b.Property<int?>("CinsiyetID")
                        .HasColumnType("integer");

                    b.Property<string>("HastaAdi")
                        .HasColumnType("text");

                    b.Property<string>("HastaAdres")
                        .HasColumnType("text");

                    b.Property<string>("HastaBoy")
                        .HasColumnType("text");

                    b.Property<string>("HastaEmail")
                        .HasColumnType("text");

                    b.Property<string>("HastaKilo")
                        .HasColumnType("text");

                    b.Property<string>("HastaSoyadi")
                        .HasColumnType("text");

                    b.Property<string>("HastaTel")
                        .HasColumnType("text");

                    b.Property<string>("HastaYas")
                        .HasColumnType("text");

                    b.Property<int?>("IlceID")
                        .HasColumnType("integer");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("integer");

                    b.Property<int?>("SehirID")
                        .HasColumnType("integer");

                    b.HasKey("HastaID");

                    b.HasIndex("CinsiyetID");

                    b.HasIndex("IlceID");

                    b.HasIndex("KullaniciID")
                        .IsUnique();

                    b.HasIndex("SehirID");

                    b.ToTable("Hastalars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.HastaneKlinikleri", b =>
                {
                    b.Property<int>("HastaneID")
                        .HasColumnType("integer");

                    b.Property<int>("KlinikID")
                        .HasColumnType("integer");

                    b.HasKey("HastaneID", "KlinikID");

                    b.HasIndex("KlinikID");

                    b.ToTable("HastaneKlinikleris");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.Property<int>("HastaneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HastaneID"));

                    b.Property<string>("HastaneAdi")
                        .HasColumnType("text");

                    b.Property<int?>("IlceID")
                        .HasColumnType("integer");

                    b.Property<int?>("SehirID")
                        .HasColumnType("integer");

                    b.HasKey("HastaneID");

                    b.HasIndex("IlceID");

                    b.HasIndex("SehirID");

                    b.ToTable("Hastanelers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Ilceler", b =>
                {
                    b.Property<int>("IlceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IlceID"));

                    b.Property<string>("IlceAdi")
                        .HasColumnType("text");

                    b.Property<int?>("SehirID")
                        .HasColumnType("integer");

                    b.HasKey("IlceID");

                    b.HasIndex("SehirID");

                    b.ToTable("Ilcelers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Klinikler", b =>
                {
                    b.Property<int>("KlinikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KlinikID"));

                    b.Property<string>("KlinikAdi")
                        .HasColumnType("text");

                    b.HasKey("KlinikID");

                    b.ToTable("Kliniklers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("text");

                    b.Property<string>("Parola")
                        .HasColumnType("text");

                    b.Property<int?>("RolID")
                        .HasColumnType("integer");

                    b.HasKey("KullaniciID");

                    b.HasIndex("RolID");

                    b.ToTable("Kullanicilars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.RandevuDurumlari", b =>
                {
                    b.Property<int>("RandDurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RandDurumID"));

                    b.Property<string>("RandDurumAdi")
                        .HasColumnType("text");

                    b.HasKey("RandDurumID");

                    b.ToTable("RandevuDurumlaris");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.RandevuSaatleri", b =>
                {
                    b.Property<int>("RandSaatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RandSaatID"));

                    b.Property<DateOnly>("RandSaatTarihi")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("RandSaatZamani")
                        .HasColumnType("time without time zone");

                    b.HasKey("RandSaatID");

                    b.ToTable("RandevuSaatleris");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Randevular", b =>
                {
                    b.Property<int>("RandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RandID"));

                    b.Property<int?>("DoktorID")
                        .HasColumnType("integer");

                    b.Property<int?>("HastaID")
                        .HasColumnType("integer");

                    b.Property<int?>("HastaneID")
                        .HasColumnType("integer");

                    b.Property<int?>("KlinikID")
                        .HasColumnType("integer");

                    b.Property<int?>("RandDurumID")
                        .HasColumnType("integer");

                    b.Property<int?>("RandSaatID")
                        .HasColumnType("integer");

                    b.HasKey("RandID");

                    b.HasIndex("DoktorID");

                    b.HasIndex("HastaID");

                    b.HasIndex("HastaneID");

                    b.HasIndex("KlinikID");

                    b.HasIndex("RandDurumID");

                    b.HasIndex("RandSaatID");

                    b.ToTable("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Roller", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RolID"));

                    b.Property<string>("RolAdi")
                        .HasColumnType("text");

                    b.HasKey("RolID");

                    b.ToTable("Rollers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Sehirler", b =>
                {
                    b.Property<int>("SehirID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SehirID"));

                    b.Property<string>("SehirAdi")
                        .HasColumnType("text");

                    b.HasKey("SehirID");

                    b.ToTable("Sehirlers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Doktorlar", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Cinsiyetler", "Cinsiyetler")
                        .WithMany("Doktorlars")
                        .HasForeignKey("CinsiyetID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Hastaneler", "Hastaneler")
                        .WithMany("Doktorlars")
                        .HasForeignKey("HastaneID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Klinikler", "Klinikler")
                        .WithMany("Doktorlars")
                        .HasForeignKey("KlinikID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Kullanicilar", "Kullanicilar")
                        .WithOne("Doktorlar")
                        .HasForeignKey("SaglikRandevuSistemi.Models.Doktorlar", "KullaniciID");

                    b.Navigation("Cinsiyetler");

                    b.Navigation("Hastaneler");

                    b.Navigation("Klinikler");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastalar", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Cinsiyetler", "Cinsiyetler")
                        .WithMany("Hastalars")
                        .HasForeignKey("CinsiyetID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Ilceler", "Ilceler")
                        .WithMany("Hastalars")
                        .HasForeignKey("IlceID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Kullanicilar", "Kullanicilar")
                        .WithOne("Hastalar")
                        .HasForeignKey("SaglikRandevuSistemi.Models.Hastalar", "KullaniciID");

                    b.HasOne("SaglikRandevuSistemi.Models.Sehirler", "Sehirler")
                        .WithMany("Hastalars")
                        .HasForeignKey("SehirID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cinsiyetler");

                    b.Navigation("Ilceler");

                    b.Navigation("Kullanicilar");

                    b.Navigation("Sehirler");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.HastaneKlinikleri", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Hastaneler", "Hastaneler")
                        .WithMany("HastaneKlinikleris")
                        .HasForeignKey("HastaneID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SaglikRandevuSistemi.Models.Klinikler", "Klinikler")
                        .WithMany("HastaneKlinikleris")
                        .HasForeignKey("KlinikID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hastaneler");

                    b.Navigation("Klinikler");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Ilceler", "Ilceler")
                        .WithMany("Hastanelers")
                        .HasForeignKey("IlceID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Sehirler", "Sehirler")
                        .WithMany("Hastanelers")
                        .HasForeignKey("SehirID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Ilceler");

                    b.Navigation("Sehirler");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Ilceler", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Sehirler", "Sehirler")
                        .WithMany("Ilcelers")
                        .HasForeignKey("SehirID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sehirler");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Kullanicilar", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Roller", "Roller")
                        .WithMany("Kullanicilars")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Roller");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Randevular", b =>
                {
                    b.HasOne("SaglikRandevuSistemi.Models.Doktorlar", "Doktorlar")
                        .WithMany("Randevulars")
                        .HasForeignKey("DoktorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Hastalar", "Hastalar")
                        .WithMany("Randevulars")
                        .HasForeignKey("HastaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Hastaneler", "Hastaneler")
                        .WithMany("Randevulars")
                        .HasForeignKey("HastaneID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.Klinikler", "Klinikler")
                        .WithMany("Randevulars")
                        .HasForeignKey("KlinikID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.RandevuDurumlari", "RandevuDurumlari")
                        .WithMany("Randevulars")
                        .HasForeignKey("RandDurumID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SaglikRandevuSistemi.Models.RandevuSaatleri", "RandevuSaatleri")
                        .WithMany("Randevulars")
                        .HasForeignKey("RandSaatID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Doktorlar");

                    b.Navigation("Hastalar");

                    b.Navigation("Hastaneler");

                    b.Navigation("Klinikler");

                    b.Navigation("RandevuDurumlari");

                    b.Navigation("RandevuSaatleri");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Cinsiyetler", b =>
                {
                    b.Navigation("Doktorlars");

                    b.Navigation("Hastalars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Doktorlar", b =>
                {
                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastalar", b =>
                {
                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.Navigation("Doktorlars");

                    b.Navigation("HastaneKlinikleris");

                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Ilceler", b =>
                {
                    b.Navigation("Hastalars");

                    b.Navigation("Hastanelers");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Klinikler", b =>
                {
                    b.Navigation("Doktorlars");

                    b.Navigation("HastaneKlinikleris");

                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Kullanicilar", b =>
                {
                    b.Navigation("Doktorlar");

                    b.Navigation("Hastalar");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.RandevuDurumlari", b =>
                {
                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.RandevuSaatleri", b =>
                {
                    b.Navigation("Randevulars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Roller", b =>
                {
                    b.Navigation("Kullanicilars");
                });

            modelBuilder.Entity("SaglikRandevuSistemi.Models.Sehirler", b =>
                {
                    b.Navigation("Hastalars");

                    b.Navigation("Hastanelers");

                    b.Navigation("Ilcelers");
                });
#pragma warning restore 612, 618
        }
    }
}
